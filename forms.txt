### Basic visualizations and presentations ###

show a <plot> of <dim_1> and <dim_2>
<plot>(<dim_1>, <dim_2>)

# work with plots of single dimension, e.g. histogram
show a <plot> of <dim_1>
<plot>(<dim_1>)

# work with plots of multi-dimensions, e.g. parallel coordinates, heatmap
show a <plot> with <dim_list>
<plot>(<dim_list>)

show a parallel coordiates (of all dimensions)
parallel_coordinates(<all_dims>)




### Rendering properties, highlighting, and selection ###

highlight the selection
<highlight>()

make the selection transparent
<rendering_property_setter>(<opacity=>)

make the selection bold
width_setter(3)

make the selected bolder
width_setter(<width> + 1)

# default color transform
darken the selection
color_setter(darker(<color>))

highlight the selection in <color>
<rendering_property_setter>(<color>)

# <rendering_property> includes width, size, color, border color, opacity
# e.g. set opacity to 0.3
set selection <rendering_property> to <value>
<rendering_property_setter>(<value>, <selection_only=true>)

set <rendering_property> to <value>
<rendering_property_setter>(<value>)

# color every data point <color>
color all <color>
<color_setter>(<color>)

enlarge/contract the data points
<size_setter>(<size> +/- 1)

increase/reduce the <rendering_property>
<rendering_property_setter>(<rendering_propert>, <value> +/- 1)

slightly increase/reduce the <rendering_property>
<rendering_property_setter>(<rendering_propert>, <value> +/- <slight_value=>)

# visual channel encoding
map <dim_1> to size
<property_mapping>(<dim_1>, size)

encode <dim_1> by CYWR scale
<property_mapping>(<dim_1>, <colorscale=CYWR>)

# vague rendering properties
make the selection prominent
<prominent_rendering_property_setter>()




### Mixed visualization and rendering properties ###

show a scatterplot with circle size 3
scatterplot(<dim_1=>, <dim_2=>, <size=3>)

show a scatterplot with opacity .618
scatterplot(<dim_1=>, <dim_2=>, <opacity=.618>

show a heatmap with red green color scale
heatmap(<dim_list=>, <colorscale=>)

show a network and encode node <dim_1> by size and edge <dim_2> by color
network(<dim_1>, size, <dim_2>, <colorscale=>)




### Linked queries ###

highlight the selection in a <plot>
<linked_plot>(<plot>, <highlighted_rendering_properties=>)

draw a <plot> and highlight the selection in a <plot_2>
<linked_plot>(<plot>, <plot_2>, <highlighted_rendering_properties=>)




### Filtering and analysis ###

find the extreme of <dim_1>
<extreme_plot>(<dim_1>)

find the extremes of the data
<extreme_plot>()

which car was latestly built?
<min>(<dim_time>)

which car has the largest number of cylinders?
<max>(cylinder)

# refer to data point clustering techniques
which cars are similar to this?
<similar>(cars)

which cars have similar number of cylinders
<similar>(cars, cylinder)

# refer to plot recommendation techniques in literature
anything interesting in this data?
<recommended_plot>()


# * Notes:
# - <X> is placeholder variable for X, e.g. <plot> could be scatterplot, heatmap, etc.
# - <X=> is placeholder variable for X, with X's default value set.
# - Targeted data and node are most of the implicit. we assume user clicks on a node or a port,
#   and the target subset of the action is thus known.
# - Punctuations are useless, e.g. "?", "!".
# - Verbs like "show" can be paraphrased to "draw", "present", etc.
# - Articles "a/an/the" are not important and can be added/omitted arbitrarily.
# - Nouns after verbs are typically useless, e.g. show (me) a plot of...
# - Prepositions "of", "with", "on" are often exchangeable.
# - Plural forms of nouns are likely to be useless, e.g. extreme is the same as extremes.
# - Comparative terms, "bold", "bolder", "boldest" might be mapped to default value.s
# - Adverbs, "slightly", "mostly" might be mapped to default value.s
# - Inside VisFlow before queries are parsed, dimension names will be mapped to <dim_*> and
#   plot names will be mapped to <plot>. Sempre only needs to parse these placeholders.

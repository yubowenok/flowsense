(def @dim_word (string "dimension"))
(rule $DimWord (dimension) (ConstantFn @dim_word))
(rule $DimWord (attribute) (ConstantFn @dim_word))

(def @all_dims (string "all_dims"))
(def @dim (string "dim"))
(rule $Dim (dim) (ConstantFn @dim))
(rule $Dim ($QuantAny $DimWord) (ConstantFn @dim))

# Single or multiple dimensions
(rule $Dims ($Dim) (IdentityFn))
#(rule $DimConjOperator ($Conj) (ConstantFn (lambda y (lambda x (call + (var x) (call + (string " ") (var y)))))))
#(rule $DimConjPartial ($DimConjOperator $Dim) (JoinFn forward))
(rule $Dims ($Dim $Conj $Dim) (ConstantFn (string "dim dim")))
(rule $Dims ($Dim $Dims) (ConcatFn " "))

# All the dimensions 
(rule $AllDims (all ($Prep optional) ($Det optional) $LEMMA_TOKEN) (ConstantFn @all_dims))



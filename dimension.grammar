(def @dim_word (string "dimension"))
(rule $DimWord (dimension) (ConstantFn @dim_word))
(rule $DimWord (attribute) (ConstantFn @dim_word))

(def @all_dims (string "all_dims"))
(def @dim (string "dim"))
(rule $Dim (dim) (ConstantFn @dim))
(rule $Dim ($DimWord) (ConstantFn @dim))
(rule $Dim ($QuantAny $DimWord) (ConstantFn @dim))
(rule $Dim ($Det $Dim) (ConstantFn @dim))

# Single or multiple dimensions
(rule $Dims ($Dim) (IdentityFn))
(rule $Dims ($Dim (, optional) ($Conj optional) $Dims) (ConcatFn " "))
(rule $Dims ($Dim (, optional) $Dims) (ConcatFn " "))
(rule $Dims ($Dim over $Dim) (ConcatFn " "))

(rule $GroupPartial ($GroupBy) (ConstantFn (lambda x (lambda y (call + (var x) (string " ") (var y))))))
(rule $Group ($GroupPartial $Dim) (JoinFn forward))
(rule $Dims ($Dims $Group) (JoinFn backward))


# All the dimensions 
(rule $AllDims (all ($Prep optional) ($Det optional) $LEMMA_TOKEN) (ConstantFn @all_dims))
(rule $Dims ($AllDims) (IdentityFn))

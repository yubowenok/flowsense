(def @column (string "column"))
(def @all_columns (string "all_columns"))

(rule $ColumnToken ($TOKEN) (FilterTokenFn lemma column))

# Single column
(rule $Column ($ColumnToken) (ConstantFn @column))
(rule $Column ($QuantAny $ColumnToken) (ConstantFn @column))
#(rule $Column ($Det $Column) (ConstantFn @column))
# (rule $Column ($Column $StopPhrase) (ConstantFn @column))
# (rule $Column ($Det $StopPhrase ($Prep optional) $Column) (ConstantFn @column))

# Multiple columns
(rule $Columns ($Column) (IdentityFn))
(rule $Columns ($Column ($Conj optional) $Columns) (ConcatFn " "))

(rule $AllColumns (all ($Prep optional) ($Det optional) $LEMMA_TOKEN) (ConstantFn @all_columns))

(rule $Columns ($AllColumns) (IdentityFn))

# Group by column
(rule $GroupToken ($TOKEN) (FilterTokenFn lemma group per by))
(rule $GroupByColumn_ ($GroupToken ($Prep optional) $Column) (SelectFn 1))
(rule $GroupByColumn ($GroupByColumn_) (ConcatFn prepend "group_by:"))

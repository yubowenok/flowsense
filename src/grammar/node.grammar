# Node labels can be injected.
(rule $NodeInjected ($TOKEN) (FilterTokenFn token r_placeholder))

# Node types
(rule $NodeType ($TOKEN) (FilterTokenFn token r_node_type_1 r_node_type_2 r_node_type_3 r_node_type_4 r_node_type_5))
# Node labels
(rule $NodeLabel ($TOKEN) (FilterTokenFn token r_node_label_1 r_node_label_2 r_node_label_3 r_node_label_4 r_node_label_5))

# Nodes
(rule $Node_ ($NodeLabel ($StopNoun optional)) (IdentityFn))
(rule $Node_ ($StopNoun ($Prep optional) $Node_) (SelectFn 1))
(rule $Node_ ($Node_ ($Conj optional) $Node_) (ConcatFn ":"))
(rule $Node ($Node_ $Marker) (SelectFn 0))
(rule $Node ($Marker $Node_) (SelectFn 1))
(rule $Node ($Node_) (IdentityFn))

(rule $NodePort ($Node) (IdentityFn))
(rule $NodePort ($ChartSelection) (IdentityFn))
(rule $NodePort ($NodeType) (IdentityFn))

(rule $TwoNodes (($Prep optional) $NodePort ($Prep optional) ($Conj optional) $NodePort) (ConcatFn ":"))

(rule $NewNode ($NodeType ($StopNoun optional)) (IdentityFn))
(rule $NewNode ($StopNoun ($Prep optional) $NewNode) (SelectFn 1))
(rule $NewNode ($NewNode ($Conj optional) $NewNode) (ConcatFn ":"))

## Command source/target ##
# Avoid target being an existing node. It is unclear how to change the diagram to dump output to a connected node.
(rule $NodeTarget ($PrepTo $NewNode) (SelectFn 1))
(rule $NodeSource ($PrepFrom $Node) (SelectFn 1))
(rule $ChartTarget ($PrepTo $ChartDescriptor) (SelectFn 1))
(rule $ChartSource ($PrepFrom $ChartDescriptor) (SelectFn 1))

(rule $Target_ ($ChartTarget) (IdentityFn))
(rule $Target_ ($NodeTarget) (IdentityFn))
(rule $Source_ ($ChartSource) (IdentityFn))
(rule $Source_ ($NodeSource) (IdentityFn))

(rule $Target ($Target_) (ConcatFn prepend "target:"))
(rule $Source ($Source_) (ConcatFn prepend "source:"))

(rule $SourceTarget ($Source) (IdentityFn))
(rule $SourceTarget ($Target) (IdentityFn))

# Constant extraction
(def @extract (string "extract"))
(rule $ExtractToken ($TOKEN) (FilterTokenFn lemma r_extract get retrieve))
(rule $ExtractVerb ($ExtractToken) (ConstantFn @extract))

(rule $Extract ($ExtractVerb (value optional) ($Prep optional) $Columns) (ConcatFn ":"))

# Linking
(def @link (string "link"))
(rule $LinkToken ($TOKEN) (FilterTokenFn lemma r_link join))
(rule $LinkVerb ($LinkToken) (ConstantFn @link))
(rule $LinkSameColumn (($Prep optional) same $Column) (IdentityFn))

(rule $LinkPhrase ($LinkVerb ($StopNoun optional)) (IdentityFn))

(rule $LinkColumn (($Prep optional) $Column) (IdentityFn))
(rule $LinkColumn ($LinkSameColumn) (IdentityFn))

(rule $LinkSource ($Column $Node) (ConcatFn ":_link_of:"))
(rule $LinkTarget ($Column $Node) (ConcatFn ":_link_of:"))

(rule $Link ($LinkVerb $LinkSource ($Prep optional) $LinkTarget) (ConcatFn ":"))
(rule $Link ($LinkPhrase $LinkColumn) (ConcatFn ":"))

(rule $Command ($Extract) (IdentityFn))
(rule $Command ($Link) (IdentityFn))

# Conjunction
(rule $Conj ($TOKEN) (FilterTokenFn lemma and with , ;))
(rule $Conj (or) (ConstantFn "or"))

# Preposition
# IN, TO: in, within, to
# VBG: using
(rule $Prep ($TOKEN) (FilterPosTagFn token IN TO VBG))

# Verb
(rule $Verb ($TOKEN) (FilterPosTagFn token VB VBN VBP))
# Handle special verbs that can be recognized as NN/JJ
(rule $Verb ($TOKEN) (FilterTokenFn lemma map change load open))

# Adjective
(rule $Adj ($TOKEN) (FilterPosTagFn token JJ))
# Handle special adjectives that can be recognized as NN
(rule $Adj ($TOKEN) (FilterTokenFn lemma auto))

# To connectors
(rule $To_ ($TOKEN) (FilterPosTagFn token TO VBD-AUX))
(rule $To ($To_) (ConstantFn ""))

# "over" is a specification for series column
(def @over (string "over"))
(rule $PrepOverToken ($TOKEN) (FilterTokenFn lemma over by with to against along))
(rule $PrepOver ($PrepOverToken) (ConstantFn @over))

# "from" is a specification for diagram connection source
(def @from (string "from"))
(rule $PrepFrom_ ($TOKEN) (FilterTokenFn lemma from in of))
(rule $PrepFrom ($PrepFrom_) (ConstantFn @from))

# "to" is a specification for diagram connection target
(def @to (string "to"))
(rule $PrepTo_ ($TOKEN) (FilterTokenFn lemma in to onto into))
(rule $PrepTo_ (in to) (IdentityFn))
(rule $PrepTo_ (on to) (IdentityFn))
(rule $PrepTo ($PrepTo_) (ConstantFn @to))

(def @by (string "by"))
(rule $PrepBy ($Prep) (FilterPosTagFn token IN))

# Determiner
# DT: a, the, that, these
(rule $Det ($TOKEN) (FilterPosTagFn token DT WDT PRP)) # PRP$

# Quantifier
(def @quant_one (string "one"))
(def @quant_all (string "all"))
(rule $QuantAny_ ($TOKEN) (FilterTokenFn lemma a an one any))
(rule $QuantAny ($QuantAny_) (ConstantFn @quant_one))
(rule $QuantAll_ ($TOKEN) (FilterTokenFn lemma every all))
(rule $QuantAll ($QuantAll_) (ConstantFn @quant_all))

# Adverb
(rule $Only ($TOKEN) (FilterPosTagFn token RB))
